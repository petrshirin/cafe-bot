# Generated by Django 3.0.3 on 2022-03-21 21:23

import bot_telegram.models
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Addition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('price', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('card_number', models.CharField(blank=True, default=None, max_length=25, null=True)),
                ('rebill_id', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('FIO', models.CharField(max_length=255)),
                ('TIN', models.CharField(max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('menu_struct', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantManager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('user_id', models.IntegerField()),
                ('is_active', models.BooleanField(default=False)),
                ('is_free', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantMenu',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('volume', models.IntegerField(default=1)),
                ('unit', models.CharField(max_length=30)),
                ('price', models.IntegerField()),
                ('cooking_time', models.DurationField()),
                ('additions', models.ManyToManyField(blank=True, to='bot_telegram.Addition')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', bot_telegram.models.NonStrippingTextField(default='Обычная скидка')),
                ('count_transaction', models.IntegerField(default=999999)),
                ('base_sale', models.BooleanField()),
                ('is_cash_back', models.BooleanField()),
                ('percent', models.FloatField(default=0.1)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TelegramBot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('token', models.CharField(max_length=100)),
                ('public_offer', models.FileField(blank=True, default=None, null=True, upload_to='public_offer/')),
                ('public_offer_url', models.URLField(blank=True, default=None, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Owner')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('step', models.IntegerField(default=0)),
                ('user_name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, default=None, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TelegramUserProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_basket', models.BooleanField(default=False)),
                ('is_store', models.BooleanField(default=False)),
                ('additions', models.ManyToManyField(blank=True, to='bot_telegram.Addition')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.RestaurantMenu')),
                ('restaurant', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramUserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='UserSale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=999999)),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Sale')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.IntegerField(blank=True, default=None, null=True)),
                ('is_parent', models.BooleanField(default=False)),
                ('count', models.IntegerField(default=0)),
                ('is_bonuses', models.BooleanField(default=False)),
                ('status', models.IntegerField(default=0)),
                ('url', models.URLField(blank=True, default=None, null=True)),
                ('card', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Card')),
                ('products', models.ManyToManyField(blank=True, to='bot_telegram.TelegramUserProduct')),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramUserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=5)),
                ('email', models.EmailField(max_length=254)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
        migrations.AddField(
            model_name='telegramuser',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUserRole'),
        ),
        migrations.AddField(
            model_name='telegramuser',
            name='telegram_bot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramBot'),
        ),
        migrations.CreateModel(
            name='TelegramMessage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=255)),
                ('text', bot_telegram.models.NonStrippingTextField()),
                ('bot', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramBot')),
            ],
        ),
        migrations.CreateModel(
            name='TelegramBasket',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(blank=True, to='bot_telegram.TelegramUserProduct')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
        migrations.AddField(
            model_name='sale',
            name='bot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramBot'),
        ),
        migrations.CreateModel(
            name='RestaurantSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('payment_type', models.CharField(default='Tinkoff', max_length=60)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('time_opened', models.TimeField(blank=True, default=None, null=True)),
                ('time_closed', models.TimeField(blank=True, default=None, null=True)),
                ('restaurant', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='restaurant',
            name='managers',
            field=models.ManyToManyField(blank=True, to='bot_telegram.RestaurantManager'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='products',
            field=models.ManyToManyField(blank=True, to='bot_telegram.RestaurantMenu'),
        ),
        migrations.AddField(
            model_name='restaurant',
            name='telegram_bot',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramBot'),
        ),
        migrations.CreateModel(
            name='OwnerSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('terminal_key', models.CharField(max_length=150)),
                ('password', models.CharField(max_length=150)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Owner')),
            ],
        ),
        migrations.CreateModel(
            name='Cheque',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('email', models.EmailField(max_length=254)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.Transaction')),
            ],
        ),
        migrations.AddField(
            model_name='card',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser'),
        ),
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot_telegram.TelegramUser')),
            ],
        ),
    ]
